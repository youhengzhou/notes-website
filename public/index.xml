<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes Website</title>
    <link>https://youhengzhou.github.io/notes-website/</link>
    <description>Recent content on Notes Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://youhengzhou.github.io/notes-website/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>hci midterm overview</title>
      <link>https://youhengzhou.github.io/notes-website/posts/overview/</link>
      <pubDate>Wed, 15 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://youhengzhou.github.io/notes-website/posts/overview/</guid>
      <description>lec 1 interaction design is process
lec 2 UX
accessibility, extent product is accessible for those with disabilities
inclusiveness, fair, open, equal to everyone, smartphones being designed and made available for all
impairments
universal design
  equitable use
  flexibility in use
  simple and intuitive use
  perceptible information
  tolerance for error
  low physical effort
  size and space for approach and use</description>
    </item>
    
    <item>
      <title>sysc 4120 lecture 7 notes</title>
      <link>https://youhengzhou.github.io/notes-website/posts/l7/</link>
      <pubDate>Mon, 30 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://youhengzhou.github.io/notes-website/posts/l7/</guid>
      <description>lecture 7 chapter 8 component based thinking how architect think about components
how architect decompose system into components
component based thinking module structure that is assigned some specific computational responsibilities that form the basis of work assignments for programming teams
how can we divide work up among our development teams
component principal unit of computation
could be a lot of things, peer, client, server etc.
explain typically as architect, we think more in terms of components than physical modules</description>
    </item>
    
    <item>
      <title>world of ironsworn</title>
      <link>https://youhengzhou.github.io/notes-website/posts/ironsworn/</link>
      <pubDate>Sun, 29 Jan 2023 10:02:32 -0500</pubDate>
      
      <guid>https://youhengzhou.github.io/notes-website/posts/ironsworn/</guid>
      <description>world of ironsworn 0,1,2 (below average, average, basics) 3,4,5,6 (capable, veteran, master, superhuman) 7,8,9 (divine)
blah blah blah
++++++++++++++++++++===+++++==MM===C==++++++++==CMMMM====+++++++==MM++++=++++++++MMMM++++++++==####++++++=C+++++++++++++++++CMMMMM+++++MMMcharacter wandering fencer, jorgan, wanderlust, fence 5
resources    chaos divinity shadow joker     dice of fate roll d10, 0-4 fails, 5-9 wins       hawk storvile     far-seeing undertake a journey, resupply, +1   fierce secure an advantage   vigilant face danger enter fray   exp 0    progress track    fight a dragon     troublesome   0000 0000 0000 0000 0000   0000 0000 0000 0000 0000    stats    momentum     2       edge heart iron shadow wits     5 5 5 1 1       health spirit supply     5 5 5       wounded shaken unprepared encumbered     false false false false       maimed corrupted cursed tormented     false false false false    </description>
    </item>
    
    <item>
      <title>sysc 4120 lab 2 notes</title>
      <link>https://youhengzhou.github.io/notes-website/posts/l2/</link>
      <pubDate>Sun, 29 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://youhengzhou.github.io/notes-website/posts/l2/</guid>
      <description>chapter 4 architecture characteristics defined architecture characteristic   describes a concern critical to the success of the architecture
  like non functional but more important
  not usually in requirements, but can be in
  non domain design consideration   certain level of performance for the application
  not written in requirements
  influences some structural aspect of design  security, influences structure  critical or important to application success  fewest most possible  explicit vs implicit explicit characteristic  characteristic that appears in requirements documentation  implicit characteristic   characteristic necessary for project success, but does not appear in requirements documentation</description>
    </item>
    
  </channel>
</rss>
